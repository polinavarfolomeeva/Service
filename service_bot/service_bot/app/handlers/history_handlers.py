from aiogram import Router, F
from aiogram.types import CallbackQuery, InlineKeyboardButton
from aiogram.fsm.context import FSMContext
from aiogram.utils.keyboard import InlineKeyboardBuilder
from loguru import logger
import math

from app.keyboards.keyboards import (
    get_main_menu, get_products_keyboard, get_services_keyboard, 
    get_product_detail_keyboard, get_service_detail_keyboard, 
    get_categories_keyboard
)
from app.services.api_service import api_service
from app.utils.formatting import format_message, format_product_info, format_service_info

router = Router()

@router.callback_query(F.data == "order_history")
async def order_history_handler(callback: CallbackQuery):
    logger.info("–û–±—Ä–∞–±–æ—Ç—á–∏–∫ 'order_history' –≤—ã–∑–≤–∞–Ω!")

    phone_number = "79991234567"

    try:
        response = await api_service.get_purchase_history_by_phone(phone_number)

        if response["status"] != 200:
            await callback.message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –∑–∞–∫–∞–∑–æ–≤.")
            await callback.answer()
            return

        orders = response["data"].get("orders", [])

        if not orders:
            await callback.message.answer("üì≠ –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–∫–∞–∑–æ–≤.")
            await callback.answer()
            return

        history_text = "<b>üì¶ –ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤</b>\n\n"

        for i, order in enumerate(orders, start=1):
            history_text += (
                f"{bold(f'–ó–∞–∫–∞–∑ ‚Ññ{i}')}\n"
                f"- –î–∞—Ç–∞: {order.get('–î–∞—Ç–∞', '‚Äî')}\n"
                f"- –°—Ç–∞—Ç—É—Å: {order.get('–°—Ç–∞—Ç—É—Å', '‚Äî')}\n"
                f"- –°—É–º–º–∞: {order.get('–°—É–º–º–∞', '‚Äî')} —Ä—É–±.\n"
                f"- –¢–æ–≤–∞—Ä—ã:\n"
            )
            —Ç–æ–≤–∞—Ä—ã = order.get("–¢–æ–≤–∞—Ä—ã", [])
            for j, item in enumerate(—Ç–æ–≤–∞—Ä—ã, start=1):
                history_text += (
                    f"  {j}. {item.get('–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ', '‚Äî')} ‚Äî {item.get('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ', 1)} —à—Ç √ó {item.get('–¶–µ–Ω–∞', '‚Äî')} —Ä—É–±.\n"
                )
            history_text += "\n"

        if callback.message.text:
            await callback.message.edit_text(
                text=history_text,
                reply_markup=get_back_to_profile_keyboard(),
                parse_mode="HTML"
            )
        else:
            await callback.message.answer(
                text=history_text,
                reply_markup=get_back_to_profile_keyboard(),
                parse_mode="HTML"
            )

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏—Å—Ç–æ—Ä–∏–∏ –∑–∞–∫–∞–∑–æ–≤: {e}")
        await callback.message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏—Å—Ç–æ—Ä–∏–∏ –∑–∞–∫–∞–∑–æ–≤.")

    await callback.answer()

def get_back_to_profile_keyboard():
    from aiogram.utils.keyboard import InlineKeyboardBuilder
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_main"),
        width=1
    )
    return builder.as_markup()

@router.callback_query(F.data == "back_to_main")
async def process_back_to_main(callback: CallbackQuery):

    user_name = callback.from_user.first_name
    greeting_text = get_main_menu_text(user_name)

    await callback.message.edit_text(
        greeting_text, 
        reply_markup=get_main_menu(),
        parse_mode="HTML"
    )
    await callback.answer()
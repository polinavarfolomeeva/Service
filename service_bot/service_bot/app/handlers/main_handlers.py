from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command, CommandStart
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from loguru import logger
from app.utils.formatting import format_support_info
from app.keyboards.keyboards import get_back_button
from aiogram.utils.markdown import bold, code

from app.keyboards.keyboards import get_main_menu
from app.utils.formatting import get_main_menu_text

router = Router()

@router.message(CommandStart())
async def cmd_start(message: Message):

    user_name = message.from_user.first_name
    greeting_text = get_main_menu_text(user_name)

    await message.answer(greeting_text, reply_markup=get_main_menu(), parse_mode="HTML")

@router.message(Command("help"))
async def cmd_help(message: Message):
    help_text = """
<b>–ü–æ–º–æ—â—å</b>

–î–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –≤ –º–µ–Ω—é:
- <b>–ö–∞—Ç–µ–≥–æ—Ä–∏–∏:</b> –ü—Ä–æ—Å–º–æ—Ç—Ä –∫–∞—Ç–∞–ª–æ–≥–∞ —Ç–æ–≤–∞—Ä–æ–≤.
- <b>–í—Å–µ —Ç–æ–≤–∞—Ä—ã:</b> –ü–æ–∫–∞–∑–∞—Ç—å –≤–µ—Å—å –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç.
- <b>–£—Å–ª—É–≥–∏:</b> –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É –∏–ª–∏ —Ä–µ–º–æ–Ω—Ç.
- <b>–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç:</b> –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞–º–∏ –∏ –ø—Ä–æ—Ñ–∏–ª–µ–º.
- <b>–û —Å–µ—Ä–≤–∏—Å–µ:</b> –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–ø–∞–Ω–∏–∏.

–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã, –ø–æ–∑–≤–æ–Ω–∏—Ç–µ –ø–æ –Ω–æ–º–µ—Ä—É +79210271678.
"""
    await message.answer(help_text, parse_mode="HTML")

@router.callback_query(F.data == "back_to_main")
async def process_back_to_main(callback: CallbackQuery):

    user_name = callback.from_user.first_name
    greeting_text = get_main_menu_text(user_name)

    await callback.message.edit_text(
        greeting_text, 
        reply_markup=get_main_menu(),
        parse_mode="HTML"
    )
    await callback.answer()


@router.callback_query(F.data == "my_cars")
async def order_history_handler(callback: CallbackQuery):
    logger.info("–û–±—Ä–∞–±–æ—Ç—á–∏–∫ 'my_cars' –≤—ã–∑–≤–∞–Ω!")

    cars_text = (
        f"<b>‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏</b>\n\n"
        
        f"–†–∞–±–æ—Ç—ã –ø–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—é: Kia Seed (–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞: 000000001\n\n"
        f"- –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞: 23.04.2025\n"
        f"- –ó–∞–∫–∞–∑—á–∏–∫: –ò–≤–∞–Ω–æ–≤ –ò.–ò.\n"
        f"- –°–æ—Ç—Ä—É–¥–Ω–∏–∫: –û–ø–µ—Ä–∞—Ç–æ—Ä –°—Ç–∞—Å\n"
        f"- –°—Ç–∞—Ç—É—Å: –í—ã–ø–æ–ª–Ω–µ–Ω\n\n"
        
        f"–¢–æ–≤–∞—Ä—ã:\n\n"
        f"| N | –†–∞–±–æ—Ç–∞/–¥–µ—Ç–∞–ª—å                | –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ | –¶–µ–Ω–∞   | –°—É–º–º–∞   |\n"
        f"|---|------------------------------|------------|--------|---------|\n"
        f"| 1 | –¢–æ—Ä–º–æ–∑–Ω—ã–µ –∫–æ–ª–æ–¥–∫–∏ Brembo     | 1          | 2 500  | 2 500   |\n"
        f"| 2 | –ê–º–æ—Ä—Ç–∏–∑–∞—Ç–æ—Ä –∑–∞–¥–Ω–∏–π Toyota    | 1          | 3 500  | 3 500   |\n\n"
        
        f"–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: 6 000 ‚ÇΩ|\n"
    )
    try:
        if callback.message.text:
            await callback.message.edit_text(
                text=cars_text,
                reply_markup=get_back_to_profile_keyboard(),
                parse_mode="HTML"
            )
        else:
            await callback.message.answer(
                text=cars_text,
                reply_markup=get_back_to_profile_keyboard(),
                parse_mode="HTML"
            )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏—Å—Ç–æ—Ä–∏–∏ –∑–∞–∫–∞–∑–æ–≤: {e}")
        await callback.message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –∏—Å—Ç–æ—Ä–∏–∏ –∑–∞–∫–∞–∑–æ–≤.")

    await callback.answer()


@router.message(F.text == "–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç")
async def show_profile(message: Message):
    await message.answer("<b>üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=get_profile_keyboard(), parse_mode="HTML")

def get_back_to_profile_keyboard():
    from aiogram.utils.keyboard import InlineKeyboardBuilder
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_main"),
        width=1
    )
    return builder.as_markup()

@router.callback_query(F.data == "promotions")
async def promotions_handler(callback: CallbackQuery):
    logger.info("–û–±—Ä–∞–±–æ—Ç—á–∏–∫ 'promotions' –≤—ã–∑–≤–∞–Ω!")

    promotions_text = (
        f"<b>üéÅ –ê–∫—Ü–∏–∏ –∏ —Å–∫–∏–¥–∫–∏</b>\n\n"
        
        f"<b>üî• –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ:</b>\n"
        f"<i>–ó–∞–º–µ–Ω–∞ –º–∞—Å–ª–∞ ‚Äî –ø–æ —Ü–µ–Ω–µ –¥–≤—É—Ö –ª–∏—Ç—Ä–æ–≤ –≤–º–µ—Å—Ç–æ —Ç—Ä—ë—Ö!</i>\n"
        f"- –¢–æ–ª—å–∫–æ –¥–æ –∫–æ–Ω—Ü–∞ –º–µ—Å—è—Ü–∞\n"
        f"- –ü—Ä–∏ –∑–∞–∫–∞–∑–µ —É—Å–ª—É–≥–∏ –∑–∞–º–µ–Ω—ã –º–∞—Å–ª–∞ ‚Äî <code>–±–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –¥–≤–∏–≥–∞—Ç–µ–ª—è</code>\n\n"
        
        f"<b>üöó –î–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ Toyota:</b>\n"
        f"- –°–∫–∏–¥–∫–∞ <code>15%</code> –Ω–∞ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –∑–∞–ø—á–∞—Å—Ç–∏\n"
        f"- –¢—Ä–µ–±—É–µ—Ç—Å—è –ø—Ä–µ–¥—ä—è–≤–∏—Ç—å –ü–¢–° –∏–ª–∏ –°–¢–° –ø—Ä–∏ –æ–ø–ª–∞—Ç–µ\n\n"
        
        f"<b>üí• –ë–æ–Ω—É—Å –∑–∞ –æ—Ç–∑—ã–≤:</b>\n"
        f"- –û—Å—Ç–∞–≤—å—Ç–µ –æ—Ç–∑—ã–≤ –æ —Å–µ—Ä–≤–∏—Å–µ –∏ –ø–æ–ª—É—á–∏—Ç–µ <code>—Å–∫–∏–¥–∫—É 10%</code> –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é —É—Å–ª—É–≥—É\n"
        f"- –û—Ç–∑—ã–≤ –º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ –∏–ª–∏ –≤ Telegram-–±–æ—Ç–µ"
    )

    try:
        if callback.message.text:
            await callback.message.edit_text(
                text=promotions_text,
                reply_markup=get_back_to_profile_keyboard(),
                parse_mode="HTML"
            )
        else:
            await callback.message.answer(
                text=promotions_text,
                reply_markup=get_back_to_profile_keyboard(),
                parse_mode="HTML"
            )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∞–∫—Ü–∏–π: {e}")
        await callback.message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –∞–∫—Ü–∏–π.")

    await callback.answer()

@router.callback_query(F.data.in_(["add_to_cart_", "book_service_"]))
async def process_not_implemented(callback: CallbackQuery):

    feature_names = {
        "my_car": "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–≤—Ç–æ–º–æ–±–∏–ª–µ",
        "my_orders": "–ú–æ–∏ –∑–∞–∫–∞–∑—ã",
        "about": "–û —Å–µ—Ä–≤–∏—Å–µ",
    }

    if callback.data.startswith("add_to_cart_"):
        await callback.answer("üîß –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω—É –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ. –ú—ã —Å–æ–æ–±—â–∏–º, –∫–æ–≥–¥–∞ –æ–Ω–∞ —Å—Ç–∞–Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞!", show_alert=True)
        return

    if callback.data.startswith("book_service_"):
        await callback.answer("üìÖ –û–Ω–ª–∞–π–Ω-–∑–∞–ø–∏—Å—å –Ω–∞ —É—Å–ª—É–≥—É —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞! –ü–æ–∫–∞ –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–∑–≤–æ–Ω–∏—Ç—å –Ω–∞–º –¥–ª—è –∑–∞–ø–∏—Å–∏.", show_alert=True)
        return

    feature_name = feature_names.get(callback.data, "–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è")

    await callback.message.edit_text(
        f"<b>üîß {feature_name} - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</b>\n\n"
        f"–£–≤–∞–∂–∞–µ–º—ã–π –∫–ª–∏–µ–Ω—Ç!\n\n"
        f"–ú—ã –ø–æ—Å—Ç–æ—è–Ω–Ω–æ —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ —É–ª—É—á—à–µ–Ω–∏–µ–º —Å–µ—Ä–≤–∏—Å–∞. "
        f"–í –Ω–∞—Å—Ç–æ—è—â–∏–π –º–æ–º–µ–Ω—Ç –¥–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∞–∫—Ç–∏–≤–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ "
        f"–∏ —Å–∫–æ—Ä–æ —Å—Ç–∞–Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞.\n\n"
        f"<i>–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –∏ —Ç–µ—Ä–ø–µ–Ω–∏–µ! –ú—ã —Ü–µ–Ω–∏–º –≤–∞—à–µ –¥–æ–≤–µ—Ä–∏–µ.</i>",
        reply_markup=get_main_menu(),
        parse_mode="HTML"
    )

    await callback.answer()

@router.callback_query(F.data == "about")
async def about_handler(callback: CallbackQuery):
    logger.info("–û–±—Ä–∞–±–æ—Ç—á–∏–∫ 'about' –≤—ã–∑–≤–∞–Ω!")

    about_text = (
        f"<b>‚ÑπÔ∏è –û —Å–µ—Ä–≤–∏—Å–µ</b>\n\n"
        
        f"–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏: –û–û–û ¬´–ê–≤—Ç–æ–°–µ—Ä–≤–∏—Å –ü–ª—é—Å¬ª\n"
        f"–ê–¥—Ä–µ—Å: –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥, —É–ª. –õ—é–±—ã—Ç–∏–Ω—Å–∫–∞—è, –¥. 8\n"
        f"–¢–µ–ª–µ—Ñ–æ–Ω: +7 (921) 027-16-78\n"
        f"Email: info@autoserviceplus.ru\n\n"
        
        f"–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã:\n"
        f"–ü–Ω‚Äì–°–±: 9:00 ‚Äì 20:00\n"
        f"–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ: –≤—ã—Ö–æ–¥–Ω–æ–π\n\n"
        
        f"–£—Å–ª—É–≥–∏:\n"
        f"‚Ä¢ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∏ —Ä–µ–º–æ–Ω—Ç –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π\n"
        f"‚Ä¢ –ó–∞–º–µ–Ω–∞ –º–∞—Å–ª–∞, —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∏ –¥—Ä—É–≥–∏—Ö —Ä–∞—Å—Ö–æ–¥–Ω–∏–∫–æ–≤\n"
        f"‚Ä¢ –†–µ–º–æ–Ω—Ç —Ö–æ–¥–æ–≤–æ–π, —Ç–æ—Ä–º–æ–∑–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã\n"
        f"‚Ä¢ –ó–∞–ø—Ä–∞–≤–∫–∞ –∏ —Ä–µ–º–æ–Ω—Ç –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä–æ–≤\n"
        f"‚Ä¢ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–æ–ø. –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è\n"
        f"‚Ä¢ –ü—Ä–æ–¥–∞–∂–∞ –∑–∞–ø—á–∞—Å—Ç–µ–π –∏ –∞–≤—Ç–æ–∞–∫—Å–µ—Å—Å—É–∞—Ä–æ–≤\n\n"
        
        f"–ú—ã —Ä–∞–±–æ—Ç–∞–µ–º —Å 2015 –≥–æ–¥–∞, –æ–±—Å–ª—É–∂–∏–≤–∞—è –∫–∞–∫ —á–∞—Å—Ç–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤, —Ç–∞–∫ –∏ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑—á–∏–∫–æ–≤.\n"
        f"–ù–∞—à–∞ —Ü–µ–ª—å ‚Äî —Å–¥–µ–ª–∞—Ç—å –≤–∞—à –∞–≤—Ç–æ–º–æ–±–∏–ª—å –Ω–∞–¥—ë–∂–Ω—ã–º –∏ –±–µ–∑–æ–ø–∞—Å–Ω—ã–º!"
    )

    try:
        if callback.message.text:
            await callback.message.edit_text(
                text=about_text,
                reply_markup=get_back_to_profile_keyboard(),
                parse_mode="HTML"
            )
        else:
            await callback.message.answer(
                text=about_text,
                reply_markup=get_back_to_profile_keyboard(),
                parse_mode="HTML"
            )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–µ—Ä–≤–∏—Å–µ: {e}")
        await callback.message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–µ—Ä–≤–∏—Å–µ.")

    await callback.answer()

@router.callback_query(
    ~F.data.startswith("product_") &
    ~F.data.startswith("service_") &
    ~F.data.startswith("category_") &
    ~F.data.in_(["catalog_products", "catalog_services", "catalog_categories", 
                 "back_to_products", "back_to_services", "back_to_categories",
                 "login", "register", "logout", "profile", "cancel"])
)
async def process_other_callbacks(callback: CallbackQuery):

    logger.warning(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π callback_data: {callback.data}")
    await callback.answer("üîß –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ", show_alert=True)


@router.message()
async def process_other_messages(message: Message):

    user_name = message.from_user.first_name

    await message.answer(
        f"<b>üëã –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {user_name}!</b>\n\n"
        f"–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è. "
        f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –±–æ—Ç–∞ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.\n\n"
        f"<i>–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã, –≤—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ, –∏—Å–ø–æ–ª—å–∑—É—è –∫–æ–º–∞–Ω–¥—É /start</i>",
        reply_markup=get_main_menu(),
        parse_mode="HTML"
    )



